#include <Wicked_DCMotor.h>
#include <math.h>

String inputString = "";         // a string to hold incoming data
boolean stringComplete = false;  // whether the string is complete
float theta;
float magnitude;
int duration;

//void printCurrentSensing(void);

//int num_motors = 3;
Wicked_DCMotor mL(M1);
Wicked_DCMotor mF(M2);
Wicked_DCMotor mR(M3);

//Wicked_DCMotor *m[] = {&mL, &mF, &mR};


void setup(void){
  Serial.begin(9600);
  // reserve 200 bytes for the inputString:
  //  inputString.reserve(200);

  
  // note, library initialized all motors to a clockwise direction and brake condition
}

void loop(void){
  //  float theta = 0;
  //  float magnitude = 100;
  //   if (Serial.read() != '\n') {
  if (Serial.available() > 0) {
      theta = ( M_PI * Serial.parseInt() ) / 180. ;
      magnitude = Serial.parseInt();
      duration = Serial.parseInt();
    }
  
    if( duration > 0 ) {
    //  if ( Serial.available() == '\n' ) {
      Serial.print("theta = ");
      Serial.print(theta);
      Serial.print(", magnitude = ");
      Serial.print(magnitude);
      Serial.print(" and duration = ");
      Serial.println(duration);

      float vx = magnitude * sin(theta);
      float vy = magnitude * cos(theta);
      Serial.print("vx, vy = ");
      Serial.print(vx);
      Serial.print(", ");
      Serial.println(vy);

      const float sqrt3o2 = 1.0*sqrt(3)/2;
      //STEP 3. Find wheel vectors
      float wF = -vx;                   
      float wL = 0.5*vx - sqrt3o2 * vy; 
      float wR = 0.5*vx + sqrt3o2 * vy; 
   
      boolean wF_ccw = wF < 0 ? true : false;
      boolean wL_ccw = wL < 0 ? true : false;
      boolean wR_ccw = wR < 0 ? true : false;
      byte wF_speed = (byte) map(abs(wF), 0, 100, 0, 255);
      byte wL_speed = (byte) map(abs(wL), 0, 100, 0, 255);
      byte wR_speed = (byte) map(abs(wR), 0, 100, 0, 255);

      mF.setDirection(wF_ccw ? DIR_CCW : DIR_CW);
      mL.setDirection(wL_ccw ? DIR_CCW : DIR_CW);
      mR.setDirection(wR_ccw ? DIR_CCW : DIR_CW);
   
      mF.setSpeed(wF_speed);
      mL.setSpeed(wL_speed);
      mR.setSpeed(wR_speed);
      Serial.print("Speeds F,L,R = ");
      Serial.print(wF_speed);
      Serial.print(", ");
      Serial.print(wL_speed);
      Serial.print(", ");
      Serial.println(wR_speed);
		 
      delay(1000*duration);
      
    }
    else{ // no duration entered
      mF.setSpeed(0);
      mL.setSpeed(0);
      mR.setSpeed(0);
    }  

}


/*
  SerialEvent occurs whenever a new data comes in the
 hardware serial RX.  This routine is run between each
 time loop() runs, so using delay inside loop can delay
 response.  Multiple bytes of data may be available.
 */
/* void serialEvent() { */
/*   while (Serial.available()) { */
/*     // get the new byte: */
/*     char inChar = (char)Serial.read();  */
/*     // add it to the inputString: */
/*     inputString += inChar; */
/*     // if the incoming character is a newline, set a flag */
/*     // so the main loop can do something about it: */
/*     if (inChar == '\n') { */
/*       stringComplete = true; */
/*     }  */
/*   } */
/* } */
